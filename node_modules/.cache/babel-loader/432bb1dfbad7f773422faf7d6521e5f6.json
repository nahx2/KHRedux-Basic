{"ast":null,"code":"import { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nclass AuthLogic {\n  constructor() {\n    this.getUserAuth = () => {\n      return this.firebaseAuth;\n    };\n    this.getGoogleAuthProvider = () => {\n      return this.googleProvider;\n    };\n    this.firebaseAuth = getAuth();\n    this.googleProvider = new GoogleAuthProvider();\n    //this.githubProvider = new GithubAuthProvider()\n  }\n}\n\nexport default AuthLogic;\nexport const loginGoogle = (firebaseAuth, googleProvider) => {\n  return new Promise((resolve, reject) => {\n    signInWithPopup(firebaseAuth, googleProvider).then(result => {\n      const user = result.user;\n      console.log(user);\n      resolve(user);\n    }).catch(e => reject(e));\n  });\n};\nexport const logout = firebaseAuth => {\n  window.localStorage.removeItem(\"userId\");\n  return new Promise((resolve, reject) => {\n    firebaseAuth.signOut().catch(e => reject(alert(e + \": 로그아웃 에러입니다.\")));\n  });\n};\nexport const onAuthChange = firebaseAuth => {\n  return new Promise(resolve => {\n    firebaseAuth.onAuthStateChanged(user => {\n      resolve(user);\n    });\n  });\n};","map":{"version":3,"names":["getAuth","signInWithPopup","GoogleAuthProvider","AuthLogic","constructor","getUserAuth","firebaseAuth","getGoogleAuthProvider","googleProvider","loginGoogle","Promise","resolve","reject","then","result","user","console","log","catch","e","logout","window","localStorage","removeItem","signOut","alert","onAuthChange","onAuthStateChanged"],"sources":["C:/git_java20220415/Redux-Basic/src/components/service/authLogic.js"],"sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nclass AuthLogic {\r\n  constructor() {\r\n    this.firebaseAuth = getAuth();\r\n    this.googleProvider = new GoogleAuthProvider();\r\n    //this.githubProvider = new GithubAuthProvider()\r\n  }\r\n  getUserAuth = () => {\r\n    return this.firebaseAuth;\r\n  };\r\n  getGoogleAuthProvider = () => {\r\n    return this.googleProvider;\r\n  };\r\n}\r\n\r\nexport default AuthLogic;\r\n\r\nexport const loginGoogle = (firebaseAuth, googleProvider) => {\r\n  return new Promise((resolve, reject) => {\r\n    signInWithPopup(firebaseAuth, googleProvider)\r\n      .then((result) => {\r\n        const user = result.user;\r\n        console.log(user);\r\n        resolve(user);\r\n      })\r\n      .catch((e) => reject(e));\r\n  });\r\n};\r\n\r\nexport const logout = (firebaseAuth) => {\r\n  window.localStorage.removeItem(\"userId\");\r\n  return new Promise((resolve, reject) => {\r\n    firebaseAuth\r\n      .signOut()\r\n      .catch((e) => reject(alert(e + \": 로그아웃 에러입니다.\")));\r\n  });\r\n};\r\n\r\nexport const onAuthChange = (firebaseAuth) => {\r\n  return new Promise((resolve) => {\r\n    firebaseAuth.onAuthStateChanged((user) => {\r\n      resolve(user);\r\n    });\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAC5E,MAAMC,SAAS,CAAC;EACdC,WAAW,GAAG;IAAA,KAKdC,WAAW,GAAG,MAAM;MAClB,OAAO,IAAI,CAACC,YAAY;IAC1B,CAAC;IAAA,KACDC,qBAAqB,GAAG,MAAM;MAC5B,OAAO,IAAI,CAACC,cAAc;IAC5B,CAAC;IATC,IAAI,CAACF,YAAY,GAAGN,OAAO,EAAE;IAC7B,IAAI,CAACQ,cAAc,GAAG,IAAIN,kBAAkB,EAAE;IAC9C;EACF;AAOF;;AAEA,eAAeC,SAAS;AAExB,OAAO,MAAMM,WAAW,GAAG,CAACH,YAAY,EAAEE,cAAc,KAAK;EAC3D,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCX,eAAe,CAACK,YAAY,EAAEE,cAAc,CAAC,CAC1CK,IAAI,CAAEC,MAAM,IAAK;MAChB,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBJ,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC,CACDG,KAAK,CAAEC,CAAC,IAAKP,MAAM,CAACO,CAAC,CAAC,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,MAAM,GAAId,YAAY,IAAK;EACtCe,MAAM,CAACC,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;EACxC,OAAO,IAAIb,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCN,YAAY,CACTkB,OAAO,EAAE,CACTN,KAAK,CAAEC,CAAC,IAAKP,MAAM,CAACa,KAAK,CAACN,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,YAAY,GAAIpB,YAAY,IAAK;EAC5C,OAAO,IAAII,OAAO,CAAEC,OAAO,IAAK;IAC9BL,YAAY,CAACqB,kBAAkB,CAAEZ,IAAI,IAAK;MACxCJ,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}